// Generated by Dagger (https://dagger.dev).
package com.singularitycoder.connectme.helpers.locationData;

import android.content.Context;
import com.google.android.gms.common.GoogleApiAvailability;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PlayServicesAvailabilityChecker_Factory implements Factory<PlayServicesAvailabilityChecker> {
  private final Provider<Context> contextProvider;

  private final Provider<GoogleApiAvailability> googleApiAvailabilityProvider;

  public PlayServicesAvailabilityChecker_Factory(Provider<Context> contextProvider,
      Provider<GoogleApiAvailability> googleApiAvailabilityProvider) {
    this.contextProvider = contextProvider;
    this.googleApiAvailabilityProvider = googleApiAvailabilityProvider;
  }

  @Override
  public PlayServicesAvailabilityChecker get() {
    return newInstance(contextProvider.get(), googleApiAvailabilityProvider.get());
  }

  public static PlayServicesAvailabilityChecker_Factory create(Provider<Context> contextProvider,
      Provider<GoogleApiAvailability> googleApiAvailabilityProvider) {
    return new PlayServicesAvailabilityChecker_Factory(contextProvider, googleApiAvailabilityProvider);
  }

  public static PlayServicesAvailabilityChecker newInstance(Context context,
      GoogleApiAvailability googleApiAvailability) {
    return new PlayServicesAvailabilityChecker(context, googleApiAvailability);
  }
}
