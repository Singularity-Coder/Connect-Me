// Generated by Dagger (https://dagger.dev).
package com.singularitycoder.connectme.helpers;

import com.google.android.gms.common.GoogleApiAvailability;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideGoogleApiAvailabilityFactory implements Factory<GoogleApiAvailability> {
  @Override
  public GoogleApiAvailability get() {
    return provideGoogleApiAvailability();
  }

  public static AppModule_ProvideGoogleApiAvailabilityFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static GoogleApiAvailability provideGoogleApiAvailability() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideGoogleApiAvailability());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvideGoogleApiAvailabilityFactory INSTANCE = new AppModule_ProvideGoogleApiAvailabilityFactory();
  }
}
