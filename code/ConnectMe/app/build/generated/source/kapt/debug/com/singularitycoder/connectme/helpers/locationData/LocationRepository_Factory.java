// Generated by Dagger (https://dagger.dev).
package com.singularitycoder.connectme.helpers.locationData;

import com.google.android.gms.location.FusedLocationProviderClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationRepository_Factory implements Factory<LocationRepository> {
  private final Provider<FusedLocationProviderClient> fusedLocationProviderClientProvider;

  public LocationRepository_Factory(
      Provider<FusedLocationProviderClient> fusedLocationProviderClientProvider) {
    this.fusedLocationProviderClientProvider = fusedLocationProviderClientProvider;
  }

  @Override
  public LocationRepository get() {
    return newInstance(fusedLocationProviderClientProvider.get());
  }

  public static LocationRepository_Factory create(
      Provider<FusedLocationProviderClient> fusedLocationProviderClientProvider) {
    return new LocationRepository_Factory(fusedLocationProviderClientProvider);
  }

  public static LocationRepository newInstance(
      FusedLocationProviderClient fusedLocationProviderClient) {
    return new LocationRepository(fusedLocationProviderClient);
  }
}
