// Generated by Dagger (https://dagger.dev).
package com.singularitycoder.connectme.helpers;

import com.singularitycoder.connectme.helpers.locationData.LocationPreferences;
import com.singularitycoder.connectme.helpers.locationData.LocationRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ForegroundLocationService_MembersInjector implements MembersInjector<ForegroundLocationService> {
  private final Provider<LocationRepository> locationRepositoryProvider;

  private final Provider<LocationPreferences> locationPreferencesProvider;

  public ForegroundLocationService_MembersInjector(
      Provider<LocationRepository> locationRepositoryProvider,
      Provider<LocationPreferences> locationPreferencesProvider) {
    this.locationRepositoryProvider = locationRepositoryProvider;
    this.locationPreferencesProvider = locationPreferencesProvider;
  }

  public static MembersInjector<ForegroundLocationService> create(
      Provider<LocationRepository> locationRepositoryProvider,
      Provider<LocationPreferences> locationPreferencesProvider) {
    return new ForegroundLocationService_MembersInjector(locationRepositoryProvider, locationPreferencesProvider);
  }

  @Override
  public void injectMembers(ForegroundLocationService instance) {
    injectLocationRepository(instance, locationRepositoryProvider.get());
    injectLocationPreferences(instance, locationPreferencesProvider.get());
  }

  @InjectedFieldSignature("com.singularitycoder.connectme.helpers.ForegroundLocationService.locationRepository")
  public static void injectLocationRepository(ForegroundLocationService instance,
      LocationRepository locationRepository) {
    instance.locationRepository = locationRepository;
  }

  @InjectedFieldSignature("com.singularitycoder.connectme.helpers.ForegroundLocationService.locationPreferences")
  public static void injectLocationPreferences(ForegroundLocationService instance,
      LocationPreferences locationPreferences) {
    instance.locationPreferences = locationPreferences;
  }
}
