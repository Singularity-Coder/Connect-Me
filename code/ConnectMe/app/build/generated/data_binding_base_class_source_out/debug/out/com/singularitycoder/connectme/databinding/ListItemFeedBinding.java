// Generated by view binder compiler. Do not edit!
package com.singularitycoder.connectme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import com.singularitycoder.connectme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemFeedBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView cardNews;

  @NonNull
  public final ImageView ivNewsImage;

  @NonNull
  public final MaterialTextView tvSource;

  @NonNull
  public final MaterialTextView tvTitle;

  @NonNull
  public final View viewBlackFade;

  private ListItemFeedBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialCardView cardNews, @NonNull ImageView ivNewsImage,
      @NonNull MaterialTextView tvSource, @NonNull MaterialTextView tvTitle,
      @NonNull View viewBlackFade) {
    this.rootView = rootView;
    this.cardNews = cardNews;
    this.ivNewsImage = ivNewsImage;
    this.tvSource = tvSource;
    this.tvTitle = tvTitle;
    this.viewBlackFade = viewBlackFade;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemFeedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemFeedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_feed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemFeedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      MaterialCardView cardNews = (MaterialCardView) rootView;

      id = R.id.iv_news_image;
      ImageView ivNewsImage = ViewBindings.findChildViewById(rootView, id);
      if (ivNewsImage == null) {
        break missingId;
      }

      id = R.id.tv_source;
      MaterialTextView tvSource = ViewBindings.findChildViewById(rootView, id);
      if (tvSource == null) {
        break missingId;
      }

      id = R.id.tv_title;
      MaterialTextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.view_black_fade;
      View viewBlackFade = ViewBindings.findChildViewById(rootView, id);
      if (viewBlackFade == null) {
        break missingId;
      }

      return new ListItemFeedBinding((MaterialCardView) rootView, cardNews, ivNewsImage, tvSource,
          tvTitle, viewBlackFade);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
