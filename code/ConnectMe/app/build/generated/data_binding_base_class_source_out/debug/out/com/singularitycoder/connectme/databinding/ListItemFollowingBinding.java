// Generated by view binder compiler. Do not edit!
package com.singularitycoder.connectme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.divider.MaterialDivider;
import com.google.android.material.imageview.ShapeableImageView;
import com.singularitycoder.connectme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemFollowingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnFollow;

  @NonNull
  public final MaterialDivider dividerBottom;

  @NonNull
  public final ShapeableImageView ivFollowingIcon;

  @NonNull
  public final LinearLayoutCompat llFollowingTitles;

  @NonNull
  public final TextView tvFollowingSite;

  @NonNull
  public final TextView tvPostsToday;

  private ListItemFollowingBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnFollow, @NonNull MaterialDivider dividerBottom,
      @NonNull ShapeableImageView ivFollowingIcon, @NonNull LinearLayoutCompat llFollowingTitles,
      @NonNull TextView tvFollowingSite, @NonNull TextView tvPostsToday) {
    this.rootView = rootView;
    this.btnFollow = btnFollow;
    this.dividerBottom = dividerBottom;
    this.ivFollowingIcon = ivFollowingIcon;
    this.llFollowingTitles = llFollowingTitles;
    this.tvFollowingSite = tvFollowingSite;
    this.tvPostsToday = tvPostsToday;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemFollowingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemFollowingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_following, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemFollowingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_follow;
      MaterialButton btnFollow = ViewBindings.findChildViewById(rootView, id);
      if (btnFollow == null) {
        break missingId;
      }

      id = R.id.divider_bottom;
      MaterialDivider dividerBottom = ViewBindings.findChildViewById(rootView, id);
      if (dividerBottom == null) {
        break missingId;
      }

      id = R.id.iv_following_icon;
      ShapeableImageView ivFollowingIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivFollowingIcon == null) {
        break missingId;
      }

      id = R.id.ll_following_titles;
      LinearLayoutCompat llFollowingTitles = ViewBindings.findChildViewById(rootView, id);
      if (llFollowingTitles == null) {
        break missingId;
      }

      id = R.id.tv_following_site;
      TextView tvFollowingSite = ViewBindings.findChildViewById(rootView, id);
      if (tvFollowingSite == null) {
        break missingId;
      }

      id = R.id.tv_posts_today;
      TextView tvPostsToday = ViewBindings.findChildViewById(rootView, id);
      if (tvPostsToday == null) {
        break missingId;
      }

      return new ListItemFollowingBinding((ConstraintLayout) rootView, btnFollow, dividerBottom,
          ivFollowingIcon, llFollowingTitles, tvFollowingSite, tvPostsToday);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
