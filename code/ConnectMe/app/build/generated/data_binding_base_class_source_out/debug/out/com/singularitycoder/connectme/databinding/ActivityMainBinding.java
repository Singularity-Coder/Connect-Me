// Generated by view binder compiler. Do not edit!
package com.singularitycoder.connectme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.tabs.TabLayout;
import com.singularitycoder.connectme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialCardView cardHeader;

  @NonNull
  public final CoordinatorLayout clHomeContainer;

  @NonNull
  public final FloatingActionButton fabMenu;

  @NonNull
  public final TabLayout tabLayoutHome;

  @NonNull
  public final TextView tvAppSubtitle;

  @NonNull
  public final TextView tvFollowingSite;

  @NonNull
  public final ViewPager2 viewpagerHome;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialCardView cardHeader, @NonNull CoordinatorLayout clHomeContainer,
      @NonNull FloatingActionButton fabMenu, @NonNull TabLayout tabLayoutHome,
      @NonNull TextView tvAppSubtitle, @NonNull TextView tvFollowingSite,
      @NonNull ViewPager2 viewpagerHome) {
    this.rootView = rootView;
    this.cardHeader = cardHeader;
    this.clHomeContainer = clHomeContainer;
    this.fabMenu = fabMenu;
    this.tabLayoutHome = tabLayoutHome;
    this.tvAppSubtitle = tvAppSubtitle;
    this.tvFollowingSite = tvFollowingSite;
    this.viewpagerHome = viewpagerHome;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_header;
      MaterialCardView cardHeader = ViewBindings.findChildViewById(rootView, id);
      if (cardHeader == null) {
        break missingId;
      }

      CoordinatorLayout clHomeContainer = (CoordinatorLayout) rootView;

      id = R.id.fab_menu;
      FloatingActionButton fabMenu = ViewBindings.findChildViewById(rootView, id);
      if (fabMenu == null) {
        break missingId;
      }

      id = R.id.tab_layout_home;
      TabLayout tabLayoutHome = ViewBindings.findChildViewById(rootView, id);
      if (tabLayoutHome == null) {
        break missingId;
      }

      id = R.id.tv_app_subtitle;
      TextView tvAppSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (tvAppSubtitle == null) {
        break missingId;
      }

      id = R.id.tv_following_site;
      TextView tvFollowingSite = ViewBindings.findChildViewById(rootView, id);
      if (tvFollowingSite == null) {
        break missingId;
      }

      id = R.id.viewpager_home;
      ViewPager2 viewpagerHome = ViewBindings.findChildViewById(rootView, id);
      if (viewpagerHome == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, cardHeader, clHomeContainer,
          fabMenu, tabLayoutHome, tvAppSubtitle, tvFollowingSite, viewpagerHome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
